name: Add Case

on:
  issues:
    types: [labeled]

jobs:
  add-case:
    if: contains(github.event.issue.labels.*.name, 'case-addition')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write

    steps:
      - uses: actions/checkout@v4

      - name: Get issue form data
        id: get-issue-data
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body;
            const lines = body.split('\n');
            console.log(lines);
            const data = {};

            for (let i = 0; i < lines.length; i++) {
              const line = lines[i];
              console.log(`Line ${i}: ${line}`);
              if (line.includes('### Executive Order Number')) {
                data.eoNumber = lines[i + 2].trim();
              }
              if (line.includes('### Case Name')) {
                data.caseName = lines[i + 2].trim();
              }
              if (line.includes('### Case URL')) {
                data.caseUrl = lines[i + 2].trim();
              }
            }

            if (!data.caseUrl) {
              core.setFailed('Case URL is required');
              return;
            }

            core.setOutput('eo-number', data.eoNumber);
            core.setOutput('case-name', data.caseName);
            core.setOutput('case-url', data.caseUrl);

            // For debugging
            console.log('Extracted data:', data);

      - name: Update data.json
        id: update-data
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const eoNumber = '${{ steps.get-issue-data.outputs.eo-number }}';
            const caseName = '${{ steps.get-issue-data.outputs.case-name }}';
            const caseUrl = '${{ steps.get-issue-data.outputs.case-url }}';

            // Extract docket ID from CourtListener URL if present
            let docketId = null;
            if (caseUrl.includes('courtlistener.com/docket/')) {
              const match = caseUrl.match(/\/docket\/(\d+)/);
              if (match) {
                docketId = match[1];
              }
            }

            const data = JSON.parse(fs.readFileSync('src/data.json', 'utf8'));

            const eo = data.find(item => item.id === eoNumber);
            if (!eo) {
              core.setFailed(`Executive Order ${eoNumber} not found`);
              return;
            }

            if (!eo.challenges) {
              eo.challenges = [];
            }

            // Add challenge with docketId if it exists
            const challenge = {
              title: caseName,
              url: caseUrl
            };
            if (docketId) {
              challenge.docketId = docketId;
            }
            eo.challenges.push(challenge);

            if (eo.status === 'enacted') {
              eo.status = 'challenged';
            }

            // Convert to JSON with 2 spaces indentation and ensure LF line endings
            const jsonContent = JSON.stringify(data, null, 2).replace(/\r\n/g, '\n');
            // Ensure there's exactly one newline at the end of file
            fs.writeFileSync('src/data.json', jsonContent + '\n');

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "Add case ${{ steps.get-issue-data.outputs.case-name }} to EO ${{ steps.get-issue-data.outputs.eo-number }}"
          title: "Add case ${{ steps.get-issue-data.outputs.case-name }} to EO ${{ steps.get-issue-data.outputs.eo-number }}"
          body: |
            Adds new case from issue #${{ github.event.issue.number }}

            Case Name: ${{ steps.get-issue-data.outputs.case-name }}
            Case URL: ${{ steps.get-issue-data.outputs.case-url }}
            EO Number: ${{ steps.get-issue-data.outputs.eo-number }}
          branch: add-case/${{ github.event.issue.number }}
          labels: case-addition

      - name: Close Issue
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            await github.rest.issues.update({
              owner,
              repo,
              issue_number: context.payload.issue.number,
              state: 'closed',
              state_reason: 'completed'
            });
